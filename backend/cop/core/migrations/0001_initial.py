# Generated by Django 3.0.8 on 2020-09-04 08:38

import cop.utils.storages
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ATM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('merch_id', models.CharField(max_length=15, unique=True)),
                ('name_legal', models.CharField(blank=True, max_length=999, null=True)),
                ('bin', models.CharField(blank=True, max_length=999, null=True)),
                ('name_ips', models.CharField(max_length=999)),
                ('mcc', models.CharField(blank=True, max_length=4, null=True)),
                ('description', models.CharField(blank=True, max_length=999, null=True)),
                ('address', models.CharField(blank=True, max_length=999, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=999, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('bin', models.CharField(max_length=8, unique=True)),
                ('type', models.CharField(choices=[('ACQ', 'ACQ'), ('ISS', 'ISS'), ('BOTH', 'BOTH')], max_length=4)),
                ('name_eng', models.CharField(max_length=999)),
                ('name_uk', models.CharField(max_length=999)),
                ('name_rus', models.CharField(max_length=999)),
                ('operator_name', models.CharField(max_length=999)),
                ('contact_person', models.CharField(max_length=999)),
                ('contact_telephone', models.CharField(max_length=999)),
                ('contact_email', models.EmailField(max_length=999)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('form_name', models.CharField(blank=True, choices=[('escalate_form', 'escalate_form'), ('close_form', 'close_form'), ('clarify_form', 'clarify_form'), ('query_form', 'query_form'), ('survey_form', 'survey_form')], max_length=32, null=True)),
                ('officer_answer_reason', models.CharField(blank=True, choices=[(1, 'повернення погоджено, очікуйте зарахування'), (2, 'часткове погоджено, очікуйте зарахування'), (3, 'в поверненні відмовлено, документи додаються'), (4, 'в поверненні відмовлено, коментарі додаються')], max_length=2, null=True)),
                ('issuer_mmt', models.CharField(blank=True, max_length=40, null=True)),
                ('acquirer_mmt', models.CharField(blank=True, max_length=40, null=True)),
                ('dispute_mmt', models.CharField(blank=True, max_length=40, null=True)),
                ('ch_mmt', models.CharField(blank=True, max_length=999, null=True)),
                ('merchant_mmt', models.CharField(blank=True, max_length=999, null=True)),
                ('source', models.CharField(blank=True, max_length=999, null=True)),
                ('arn', models.CharField(blank=True, max_length=23, null=True)),
                ('flag', models.CharField(blank=True, choices=[('yellow', 'Yellow'), ('red', 'Red')], max_length=12, null=True)),
                ('merch_id', models.CharField(blank=True, max_length=15, null=True)),
                ('merch_name_ips', models.CharField(blank=True, max_length=99, null=True)),
                ('term_id', models.CharField(blank=True, max_length=8, null=True)),
                ('trans_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('trans_currency', models.CharField(choices=[('usd', 'дол. США'), ('eur', 'євро'), ('uah', 'грн')], max_length=3)),
                ('trans_approval_code', models.CharField(blank=True, max_length=6, null=True)),
                ('trans_date', models.DateTimeField(max_length=12)),
                ('pan', models.CharField(max_length=16)),
                ('reason_code_group', models.CharField(blank=True, help_text='Code description', max_length=999, null=True)),
                ('reason_code', models.CharField(blank=True, help_text='IPS code', max_length=4, null=True)),
                ('action_needed', models.BooleanField(default=False)),
                ('result', models.CharField(blank=True, choices=[('successful', 'Successful'), ('failed', 'Failed'), ('neutral', 'Neutral')], max_length=999, null=True)),
                ('support', models.CharField(blank=True, choices=[('us_on_them', 'Us on them'), ('them_on_us', 'Them on us'), ('us_on_us', 'Us on us')], max_length=999, null=True)),
                ('answers', django.contrib.postgres.fields.jsonb.JSONField(blank=True, max_length=999, null=True)),
                ('reminder_task_ids', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=32), size=None), blank=True, null=True, size=None)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('dispute_date', models.DateTimeField(blank=True, null=True)),
                ('registration_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('final_date', models.DateTimeField(blank=True, null=True)),
                ('chargeback_date', models.DateTimeField(blank=True, null=True)),
                ('second_presentment_date', models.DateTimeField(blank=True, null=True)),
                ('pre_arbitration_date', models.DateTimeField(blank=True, null=True)),
                ('pre_arbitration_response_date', models.DateTimeField(blank=True, null=True)),
                ('arbitration_date', models.DateTimeField(blank=True, null=True)),
                ('arbitration_response_date', models.DateTimeField(blank=True, null=True)),
                ('archived', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClaimDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(blank=True, choices=[('substitute_draft', 'Substitute Draft'), ('check', 'Check'), ('compelling_evidence', 'Compelling evidence'), ('atm_log', 'ATM log'), ('docs_not_needed', 'Docs not needed')], max_length=20, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('file', models.FileField(upload_to='claim-documents/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('text', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReasonCodeGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('group', models.CharField(blank=True, choices=[('fraud', 'Fraud'), ('authorization', 'Authorization'), ('point_of_interaction_error', 'Point-of-Interaction Error'), ('cardholder_disputes', 'Cardholder Disputes')], max_length=128, null=True)),
                ('code', models.CharField(max_length=4)),
                ('visa', models.CharField(blank=True, max_length=128, null=True)),
                ('mastercard', models.CharField(blank=True, max_length=128, null=True)),
                ('description', models.CharField(blank=True, max_length=999, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('log', models.FileField(storage=cop.utils.storages.LogsRootS3Boto3Storage(), upload_to='')),
                ('status', models.CharField(choices=[('new', 'New'), ('error', 'Error'), ('finished', 'Finished')], db_index=True, default='new', max_length=100)),
                ('error', models.TextField(blank=True, null=True)),
                ('log_hash', models.CharField(blank=True, db_index=True, max_length=256, null=True, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StageChangesHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('reason', models.CharField(default='Автоматично', max_length=999)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('index', models.PositiveIntegerField(unique=True)),
                ('name', models.CharField(max_length=999)),
                ('stage', models.CharField(choices=[('pre_mediation', 'pre_mediation'), ('mediation', 'mediation'), ('chargeback', 'chargeback'), ('chargeback_escalation', 'chargeback_escalation'), ('dispute', 'dispute'), ('dispute_response', 'dispute_response'), ('pre_arbitration', 'pre_arbitration'), ('pre_arbitration_response', 'pre_arbitration_response'), ('arbitration', 'arbitration'), ('final_ruling', 'final_ruling'), ('closed', 'closed')], default='pre_mediation', max_length=999)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(max_length=999)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Terminal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('term_id', models.CharField(max_length=999, unique=True)),
                ('address', models.CharField(blank=True, max_length=999, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('pan', models.CharField(max_length=16)),
                ('trans_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('currency', models.CharField(blank=True, choices=[('usd', 'дол. США'), ('eur', 'євро'), ('uah', 'грн')], max_length=3, null=True)),
                ('approval_code', models.CharField(blank=True, max_length=6, null=True)),
                ('cash_count', models.CharField(blank=True, max_length=999, null=True)),
                ('error', models.CharField(blank=True, max_length=999, null=True)),
                ('mcc', models.CharField(blank=True, max_length=4, null=True)),
                ('trans_start', models.DateTimeField(blank=True, max_length=12, null=True)),
                ('trans_end', models.DateTimeField(blank=True, max_length=12, null=True)),
                ('trans_date', models.DateTimeField(blank=True, max_length=12, null=True)),
                ('pin_entered', models.DateTimeField(blank=True, max_length=12, null=True)),
                ('cash_request', models.DateTimeField(blank=True, max_length=12, null=True)),
                ('cash_presented', models.DateTimeField(blank=True, max_length=12, null=True)),
                ('cash_retracted', models.DateTimeField(blank=True, max_length=12, null=True)),
                ('cash_taken', models.DateTimeField(blank=True, max_length=12, null=True)),
                ('card_taken', models.DateTimeField(blank=True, max_length=12, null=True)),
                ('disp_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('result', models.CharField(blank=True, choices=[('successful', 'Successful'), ('failed', 'Failed'), ('neutral', 'Neutral')], db_index=True, max_length=999, null=True)),
                ('utrnno', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('raw', models.TextField(null=True)),
                ('scoring', models.IntegerField(default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('magazine1_amount', models.IntegerField(default=0)),
                ('magazine2_amount', models.IntegerField(default=0)),
                ('magazine3_amount', models.IntegerField(default=0)),
                ('magazine4_amount', models.IntegerField(default=0)),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Bank')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
