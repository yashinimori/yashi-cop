version: '3'

volumes:
  staging_postgres_data: {}
  staging_postgres_data_backups: {}
  staging_traefik: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/staging/django/Dockerfile
    image: cop_staging_django
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend/cop/media:/app/cop/media
    env_file:
      - ./.envs/.staging/.django
      - ./.envs/.staging/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/staging/postgres/Dockerfile
    image: cop_staging_postgres
    volumes:
      - staging_postgres_data:/var/lib/postgresql/data
      - staging_postgres_data_backups:/backups
    env_file:
      - ./.envs/.staging/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/staging/traefik/Dockerfile
    image: cop_staging_traefik
    depends_on:
      - django
    volumes:
      - staging_traefik:/etc/traefik/acme
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "0.0.0.0:5555:5555"
      - "0.0.0.0:4000:4000"

  redis:
    image: redis:5.0

  celeryworker:
    <<: *django
    image: cop_staging_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: cop_staging_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: cop_staging_flower
    command: /start-flower

  angular:
      build:
          context: .
          dockerfile: compose/staging/angular/Dockerfile
      image: cop_staging_angular


